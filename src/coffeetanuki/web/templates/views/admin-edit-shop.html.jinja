{% extends "base/base.html.jinja" %}

{% block title %}Edit {{ shop.name }} - Admin{% endblock %}

{% block header %}{% include "base/admin-header.html.jinja" %}{% endblock %}

{% block content %}
<main class="site-content">
  <section class="section">
    <div class="container">
      <form id="editShopForm" method="PATCH">
        <div class="field">
          <label class="label" for="name">Name:</label>
          <div class="control">
            <input class="input" type="text" id="name" name="name" value="{{ shop.name }}" required>
          </div>
        </div>

        <div class="field">
          <label class="label" for="roaster">Roaster:</label>
          <div class="control">
            <input class="input" type="text" id="roaster" name="roaster" value="{{ shop.roaster or '' }}">
          </div>
        </div>

        <div class="field">
          <label class="label" for="hours">Hours of Operation:</label>
          <div class="control">
            <input class="input" type="text" id="hours" value="{{ shop.hours_of_operation or '' }}">
          </div>
        </div>

        <div class="field">
          <label class="label" for="description">Description</label>
          <div class="control">
            <textarea id="description" class="textarea">{{ shop.description or '' }}</textarea>
          </div>
        </div>

        <div class="field is-grouped">
          <div class="field">
            <label class="label" for="lat">Latitude:</label>
            <div class="control">
              <input class="input" type="number" step="any" id="lat" name="lat" value="{{ shop.coordinates.lat }}"
                required>
            </div>
          </div>

          <div class="field">
            <label class="label" for="lon">Longitude:</label>
            <div class="control">
              <input class="input" type="number" step="any" id="lon" name="lon" value="{{ shop.coordinates.lon }}"
                required>
            </div>
          </div>
        </div>

        <div class="field">
          <label class="label" for="amenities">Amenities</label>
          <div class="control">
            {% for amenity in ["oatmilk", "soymilk", "wifi"] %}
            <label class="checkbox p-2">
              <input type="checkbox" name="amenities" value="{{ amenity }}" {% if amenity in
                shop.amenities|map(attribute='name' )|list %} checked {% endif %}>
              {{ amenity }}
            </label>
            {% endfor %}
          </div>
        </div>

        <div class="field is-grouped">
          <div class="control">
            <input class="button is-primary" type="submit" value="Save">
          </div>
        </div>
      </form>

      <div id="message"></div>
    </div>
  </section>
</main>
{% endblock %}

{% block body_scripts %}
<script>
  var originalShop = {{shop.json() | safe}};

  // Handle form submission
  document.getElementById("editShopForm").addEventListener("submit", function (event) {
    event.preventDefault(); // Prevent the default form submission

    // Collect form data
    var formData = {};
    var nameField = document.getElementById("name");
    var roasterField = document.getElementById("roaster");
    var hoursField = document.getElementById("hours");
    var descriptionField = document.getElementById("description");
    var latField = document.getElementById("lat");
    var lonField = document.getElementById("lon");
    var amenitiesCheckboxes = document.getElementsByName("amenities");

    if (nameField.value !== originalShop.name) {
      formData.name = nameField.value;
    }

    if (roasterField.value !== (originalShop.roaster || '')) {
      formData.roaster = roasterField.value || null;
    }

    if (hoursField.value !== (originalShop.hours_of_operation || '')) {
      formData.hours_of_operation = hoursField.value || null;
    }

    if (descriptionField.value !== (originalShop.description || '')) {
      formData.description = descriptionField.value || null;
    }

    if (parseFloat(latField.value) !== originalShop.coordinates.lat || parseFloat(lonField.value) !== originalShop.coordinates.lon) {
      formData.coordinates = {
        lat: parseFloat(latField.value),
        lon: parseFloat(lonField.value)
      };
    }

    var originalAmenities = new Set(originalShop.amenities.map(amenity => amenity.name));
    var formDataAmenities = new Set();
    for (var i = 0; i < amenitiesCheckboxes.length; i++) {
      if (amenitiesCheckboxes[i].checked) {
        formDataAmenities.add(amenitiesCheckboxes[i].value);
      }
    }
    if (!areSetsEqual(originalAmenities, formDataAmenities)) {
        formData.amenities = Array.from(formDataAmenities)
    }

    // Send the updated data to the backend if there are changes
    if (Object.keys(formData).length > 0) {
      fetch("/api/shops/{{shop.id}}", {
        method: "PATCH",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify(formData)
      })
        .then(response => response.json())
        .then(data => {
          if (data && typeof data === "object") {
            // reassign originalShop to allow for further changes
            originalShop = data;
            console.log("Updated shop:", data);
            
            showMessage("success", "Shop updated successfully.");
          } else {
            showMessage("error", "Invalid response received from the server.");
          }
        })
        .catch(error => {
          console.error("Error:", error);
          showMessage("error", "An error occurred while updating the shop.");
        });
    } else {
      showMessage("info", "No changes made.");
    }
  });

  // Function to display messages
  function showMessage(type, message) {
    var messageDiv = document.getElementById("message");
    messageDiv.innerHTML = '<div class="' + type + '">' + message + '</div>';
  }

  function areSetsEqual(set1, set2) {
  if (set1.size !== set2.size) {
    return false;
  }

  for (const value of set1) {
    if (!set2.has(value)) {
      return false;
    }
  }

  return true;
}

</script>
{% endblock %}
